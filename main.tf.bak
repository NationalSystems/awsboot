resource "aws_internet_gateway" "bootdemo" {
    vpc_id = "${aws_vpc.bootdemo.id}"

    tags {
        Provisioned = "awsboot"
    }
}

resource "aws_vpc" "bootdemo" {
  cidr_block = "10.1.2.0/28"
  tags {
     Provisioned = "awsboot"
  }
}

resource "aws_route" "togateway" {
  route_table_id = "${aws_vpc.bootdemo.main_route_table_id}"
  destination_cidr_block = "0.0.0.0/0" 
}

resource "aws_route_table_association" "bootdemo" {
  subnet_id = "${aws_subnet.bootdemo.id}"
  route_table_id = "${aws_vpc.bootdemo.main_route_table_id}"
}

resource "aws_security_group" "allow_all" {
  name = "allow_all"
  description = "Allow all inbound traffic"
  vpc_id = "${aws_vpc.bootdemo.id}"
  ingress {
      from_port = 0
      to_port = 0
      protocol = "-1"
      cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
      from_port = 0
      to_port = 0
      protocol = "-1"
      cidr_blocks = ["0.0.0.0/0"]
  }
  tags {
     Provisioned = "awsboot"
  }
}

resource "aws_subnet" "bootdemo" {
  vpc_id = "${aws_vpc.bootdemo.id}"
  cidr_block = "${aws_vpc.bootdemo.cidr_block}"

  tags {
     Provisioned = "awsboot"
  }
}

resource "aws_instance" "bootdemo" {
    ami = "${lookup(var.amis, var.provider_aws_region)}"
    instance_type = "t2.micro"
    tags {
      Name = "${var.appname}"
      Provisioned = "awsboot"
    }
    vpc_security_group_ids = ["${aws_security_group.allow_all.id}"]
    subnet_id = "${aws_subnet.bootdemo.id}"
    key_name = "${var.aws_key_name}"
    associate_public_ip_address = true
    user_data = "${file("base-config.txt")}"
    
    root_block_device {
      volume_size = "32"
    }

    connection {
      user = "ec2-user"
      private_key = "${file("/Users/joshuacalloway/.ssh/bootdemo.pem")}"
    }
    provisioner "remote-exec" {
        script = "waitForCloudInitDone.sh"
    }
    provisioner "remote-exec" {
        inline = [
          "ssh-keyscan github.com > ~/.ssh/known_hosts",
          "git clone https://github.com/joshuacalloway/jenkins.git",
          "cp -R /home/ec2-user/.ssh /home/ec2-user/jenkins/.ssh",
          "cd /home/ec2-user/jenkins && docker build -t jenkins .",
         ]
    }
    provisioner "remote-exec" {
        script = "startJenkins.sh"
    }
    tags {
       Provisioned = "awsboot"
    }
  
}

resource "aws_route53_record" "bootdemo" {
  zone_id = "${var.aws_route53_zone_id}"
  name = "${var.appname}.${var.aws_route53_dns}"
  type = "CNAME"
    ttl = "5"
 
  weight = 10
  set_identifier = "${var.appname}"
  records = ["${aws_instance.bootdemo.public_dns}"]
}

